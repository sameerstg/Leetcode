package test;

public class Main {

	public static void main(String[] args) {
		ListNode l1=new ListNode(1);
		l1.next = new ListNode(3);
		l1.next.next = new ListNode(3);
		l1.next.next.next = new ListNode(5);
		
		ListNode l2=new ListNode(3);
		l2.next = new ListNode(5);
		l2.next.next = new ListNode(7);
		l2.next.next.next = new ListNode(11);
		
		
		ListNode l3=new ListNode(3);
		l3.next = new ListNode(5);
		l3.next.next = new ListNode(7);
		l3.next.next.next = new ListNode(11);
		ListNode lists[] = {l1,l2,l3};
		mergeKLists(lists);

	}
	 public static ListNode mergeKLists(ListNode[] lists) {
		 ListNode m = new ListNode();
		 ListNode l = m;
		 
	        while(lists[0] != null || lists[1]!=  null || lists[2]!= null){
	        	if(lists[0].val > lists[1].val &&lists[1].val > lists[2].val){
	        		l.val = lists[2].val;
	        		l.next = new ListNode();
	        		lists[2] = lists[2].next;
	        		
	        	}
	        	else if(lists[0].val > lists[1].val &&lists[1].val < lists[2].val){
	        		l.val = lists[1].val;
	        		l.next = new ListNode();
	        		lists[1] = lists[1].next;
	        	}
	        	else if(lists[0].val < lists[1].val &&lists[0].val < lists[2].val){
	        		l.val = lists[0].val;
	        		l.next = new ListNode();
	        		lists[0] = lists[0].next;
	        	}
	        	else if(lists[0].val < lists[1].val &&lists[0].val > lists[2].val){
	        		l.val = lists[2].val;
	        		l.next = new ListNode();
	        		lists[2] = lists[2].next;
	        	}
	        }
	        return l;
	    }
}
 class ListNode {
	     int val;
	      ListNode next;
	      ListNode() {}
	      ListNode(int val) { this.val = val; }
	      ListNode(int val, ListNode next) { this.val = val; this.next = next; }
	 }
